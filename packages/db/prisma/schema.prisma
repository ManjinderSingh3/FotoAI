// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id                @default(uuid())
  username        String 
  profilePicture  String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model TrainModel {
  id              String                     @id                @default(uuid())
  userId          String
  name            String
  gender          TrainModelGenderEnum
  age             Int
  ethinicity      TrainModelEthinicityEnum
  eyeColor        TrainModelEyeColorEnum
  bald            Boolean
  triggerWord     String?
  tensorPath      String?
  trainingStatus  TrainModelStatusEnum      @default(Pending)
  falAIRequestId  String?  
  trainingImgaes  TrainingImages[]
  GenerateImages  GenerateImages[]
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt
}

model GenerateImages {
  id              String                    @id                @default(uuid())
  userId          String
  imageUrl        String                    @default("")   
  trainedModelId    String
  status          GenerateImagesStatusEnum    @default(Pending)
  prompt          String
  falAIRequestId  String?
  trainModel      TrainModel                @relation(fields: [trainedModelId], references: [id])
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt
}

model TrainingImages {
  id              String              @id               @default(uuid())
  imageUrl        String
  trainedModelId    String
  trainModel      TrainModel          @relation(fields: [trainedModelId], references: [id])
}

model Packs {
  id              String              @id                @default(uuid())
  name            String
  packPrompt      PackPrompts[]
}

model PackPrompts {
  id              String              @id                @default(uuid())
  prompt          String
  packId          String
  pack            Packs               @relation(fields: [packId], references: [id])
}

enum TrainModelGenderEnum {
  Man
  Woman
  Others
}

enum TrainModelEthinicityEnum {
  White
  Black
  AsianAmerican
  EastAsian
  SouthEastAsian
  SouthAsian
  MiddleEastern
  Pacific
  Hispanic
}

enum TrainModelEyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}

enum TrainModelStatusEnum {
  Pending
  Generated
  Failed
}

enum GenerateImagesStatusEnum {
  Pending
  Generated
  Failed
}